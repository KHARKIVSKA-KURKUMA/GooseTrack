{"version":3,"file":"static/js/314.7ca53ded.chunk.js","mappings":"4UAsHA,EA9FqB,WACnB,OAA8CA,EAAAA,EAAAA,WAAS,GAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KAMMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IASvBC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KAAaG,SAAS,4BAC5BC,MAAOJ,EAAAA,KAEJI,MAAM,6BACND,SAAS,6BACZE,SAAUL,EAAAA,KAEPM,IAAI,EAAG,0CACPC,IAAI,GAAI,0CACRJ,SAAS,kCAERK,EAAY,mCAAG,WAAOC,EAAQC,GAAf,iFACbhB,GAASiB,EAAAA,EAAAA,IAASF,IADL,uBAECb,EAASgB,QAFV,iBAGRA,QAHQ,uBAIjBnB,GAAoBD,GAJH,0BASnBkB,EAAQG,YATW,2CAAH,wDAYlB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAASC,GAAG,IAAZ,UACE,SAAC,MAAD,CACEC,MAAO,CAAEC,UAAW,EAAGC,aAAc,EAAGC,MAAO,GAAIC,OAAQ,SAG/D,SAAC,KAAD,UAAiB,aACjB,SAAC,KAAD,CACEC,cAzCgB,CACpBlB,KAAM,GACNE,MAAO,GACPC,SAAU,IAuCNN,iBAAkBA,EAClBsB,SAAUb,EAHZ,SAKG,cAAGC,OAAH,IAAWa,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,OAA3B,OACC,UAAC,KAAD,CAAYC,aAAa,MAAzB,WACE,SAACC,EAAA,EAAD,CACEC,MAAM,OACNC,KAAK,OACL1B,KAAK,OACLqB,QAASA,EAAQrB,KACjBsB,OAAQA,EAAOtB,KACf2B,YAAa,qBAEf,SAACH,EAAA,EAAD,CACEC,MAAM,QACNC,KAAK,QACL1B,KAAK,QACLqB,QAASA,EAAQnB,MACjBoB,OAAQA,EAAOpB,MACfyB,YAAY,iBAEd,SAACH,EAAA,EAAD,CACEC,MAAM,WACNC,KAAK,WACL1B,KAAK,WACLqB,QAASA,EAAQlB,SACjBmB,OAAQA,EAAOnB,SACfwB,YAAY,oBAGd,UAAC,IAAD,CAAWC,UAAWR,EAAOM,KAAK,SAAlC,WACE,SAAC,KAAD,UAAe,aACf,SAAC,KAAD,SA7BL,MAsCR,E,sBCpGD,EAXqB,WACnB,OACE,SAACG,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,YACE,SAAC,EAAD,KACA,SAACC,EAAA,EAAD,QAIP,C","sources":["components/UnauthorizedUserComponents/RegisterPageComponents/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { Formik } from 'formik';\n\nimport { FcHome } from 'react-icons/fc';\nimport * as yup from 'yup';\nimport { NavLink } from 'react-router-dom';\nimport { useState } from 'react';\n\n// import RegisterSuccessModal from '../RegisterSuccessModal/RegisterSuccessModal'\n// // import { Container } from './RegisterForm.styled';\n\nimport {\n  Container,\n  StyledBtn,\n  StyledFiLogIn,\n  StyledForm,\n  StyledFormTitle,\n  StyledTextBtn,\n} from './../../LoginPageComponents/LoginForm/LoginForm.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from 'store/auth/authOperations';\nimport { selectorError } from 'store/auth/authSelectors';\nimport { AuthField } from 'components/UnauthorizedUserComponents/LoginPageComponents/AuthField/AuthField';\n\nconst RegisterForm = () => {\n  const [isModalRegister, setIsModalRegister] = useState(false);\n\n  // const toggleModalRegister = () => {\n  //   setIsModalRegister((prev)=> !prev)\n  // }\n\n  const dispatch = useDispatch();\n  const errorMsg = useSelector(selectorError);\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  // const REACT_APP_API_URL = 'https://goosetrack-tj84.onrender.com';\n\n  const validationSchema = yup.object().shape({\n    name: yup.string().required('Name is a required field'),\n    email: yup\n      .string()\n      .email('Email must be valid email')\n      .required('Email is a required field'),\n    password: yup\n      .string()\n      .min(8, 'Password must be at least 8 characters')\n      .max(16, 'Password must be at most 16 characters')\n      .required('Password is a required field'),\n  });\n  const handleSubmit = async (values, actions) => {\n    await dispatch(register(values));\n    const error = await errorMsg.message;\n    if (!error.message) {\n      setIsModalRegister(!isModalRegister);\n      // toast.success('okay')\n      return;\n    }\n\n    actions.resetForm();\n  };\n\n  return (\n    <Container>\n      <NavLink to=\"/\">\n        <FcHome\n          style={{ marginTop: 0, marginBottom: 4, width: 20, height: 20 }}\n        />\n      </NavLink>\n      <StyledFormTitle>Sign Up</StyledFormTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, dirty, touched, errors }) => (\n          <StyledForm autoComplete=\"off\">\n            <AuthField\n              title=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              touched={touched.name}\n              errors={errors.name}\n              placeholder={'Enter your name'}\n            />\n            <AuthField\n              title=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              touched={touched.email}\n              errors={errors.email}\n              placeholder=\"Enter email\"\n            />\n            <AuthField\n              title=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              touched={touched.password}\n              errors={errors.password}\n              placeholder=\"Enter password\"\n            />\n\n            <StyledBtn disabled={!dirty} type=\"submit\">\n              <StyledTextBtn>Sign Up</StyledTextBtn>\n              <StyledFiLogIn />\n            </StyledBtn>\n          </StyledForm>\n        )}\n      </Formik>\n\n      {/* <RegisterSuccessModal isModalRegister={isModalRegister} toggleModalRegister={ toggleModalRegister } /> */}\n    </Container>\n  );\n};\n\nexport default RegisterForm;\n","import AuthNavigate from 'components/UnauthorizedUserComponents/AuthNavigate';\nimport RegisterForm from 'components/UnauthorizedUserComponents/RegisterPageComponents/RegisterForm';\nimport PageLayout from '../../components/PageLayout/PageLayout';\nimport SectionAuth from 'components/UnauthorizedUserComponents/LoginPageComponents/SectionLogin/SectionAuth';\n\nconst RegisterPage = () => {\n  return (\n    <SectionAuth>\n      <PageLayout>\n        <RegisterForm />\n        <AuthNavigate />\n    </PageLayout>\n    </SectionAuth>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["useState","isModalRegister","setIsModalRegister","dispatch","useDispatch","errorMsg","useSelector","selectorError","validationSchema","yup","shape","name","required","email","password","min","max","handleSubmit","values","actions","register","message","resetForm","to","style","marginTop","marginBottom","width","height","initialValues","onSubmit","dirty","touched","errors","autoComplete","AuthField","title","type","placeholder","disabled","SectionAuth","PageLayout","AuthNavigate"],"sourceRoot":""}