{"version":3,"file":"static/js/260.10a4294f.chunk.js","mappings":"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","sources":["components/AuthorizedUserComponents/CalendarPageComponents/CalendarToolbar/CalendarToolbarItems/PeriodPaginator.styled.jsx","components/AuthorizedUserComponents/CalendarPageComponents/CalendarToolbar/CalendarToolbarItems/PeriodPaginator.jsx","components/AuthorizedUserComponents/CalendarPageComponents/CalendarToolbar/CalendarToolbarItems/PeriodTypeSelect.styled.jsx","components/AuthorizedUserComponents/CalendarPageComponents/CalendarToolbar/CalendarToolbarItems/PeriodTypeSelect.jsx","components/AuthorizedUserComponents/CalendarPageComponents/CalendarToolbar/CalendarToolbar.styled.jsx","components/AuthorizedUserComponents/CalendarPageComponents/CalendarToolbar/CalendarToolbar.jsx","pages/CalendarPage/CalendarPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst PeriodPaginatorContainer = styled.div`\n  /* .react-datepicker {\n    background-color: var(--title-color);\n    font-family: 'Inter';\n    padding: 15px, 18px;\n    border-radius: 16px;\n  } */\n\n  .react-datepicker__input-container {\n    padding: 8px, 12px, 8px, 12px;\n  }\n\n  #datePickerInput {\n    background-color: var(--title-color);\n    border-radius: 8px;\n    padding: 8px, 12px, 8px, 12px;\n    height: 34px;\n    max-width: 180px;\n    margin-right: 8px;\n    border: 0;\n    color: var(--primary-background-color);\n\n    font-size: 16px;\n    font-weight: 700;\n    text-transform: uppercase;\n    text-align: center;\n\n    color: var(--primary-background-color);\n    border: 0;\n\n    @media screen and (min-width: 768px) {\n      padding: 8px 12px;\n      font-size: 16px;\n\n      align-items: center;\n    }\n  }\n\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: var(--primary-background-color);\n    font-family: 'Inter';\n    width: 1.7rem;\n    line-height: 1.2rem;\n    font-size: 18 px;\n    margin: 10px 10px;\n  }\n\n  /* .react-datepicker__header {\n    background-color: var(--title-color);\n    border-top-right-radius: 8px;\n    border-top-left-radius: 8px;\n    border-bottom: 1px solid #ffffff33;\n  } */\n\n  /* .react-datepicker__year-read-view--down-arrow,\n  .react-datepicker__month-read-view--down-arrow,\n  .react-datepicker__month-year-read-view--down-arrow,\n  .react-datepicker__navigation-icon::before {\n    border-color: #ffffff;\n    border-style: solid;\n    border-width: 3px 3px 0 0;\n    content: '';\n    display: block;\n    height: 9px;\n    position: absolute;\n    top: 6px;\n    width: 9px;\n  }\n\n  .react-datepicker-popper[data-placement^='top']\n    .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom']\n    .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='top']\n    .react-datepicker__triangle::after,\n  .react-datepicker-popper[data-placement^='bottom']\n    .react-datepicker__triangle::after {\n    border: 0;\n  }\n\n  .react-datepicker-popper[data-placement^='top']\n    .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom']\n    .react-datepicker__triangle::before {\n    border-bottom-color: transparent;\n    border: 0;\n    background-color: transparent;\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header {\n    margin-top: 0;\n    margin-bottom: 18px;\n    color: var(--primary-background-color);\n    font-weight: 600;\n    font-family: Inter;\n    font-size: 16px;\n  }\n\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: var(--primary-background-color);\n    font-family: 'Inter';\n    width: 1.7rem;\n    line-height: 1.2rem;\n    font-size: 18 px;\n    margin: 10px 10px;\n  }\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    border-radius: 24px;\n    width: 24px;\n    height: 24px;\n    background-color: var(--low-background-color);\n    color: var(--primary-background-color);\n    text-align: center;\n  } */\n\n  /* .react-datepicker__day--highlighted,\n  .react-datepicker__month-text--highlighted,\n  .react-datepicker__quarter-text--highlighted,\n  .react-datepicker__year-text--highlighted {\n    border-radius: 0;\n    background-color: white;\n    color: var(--title-color);\n  } */\n\n  /* .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    border-radius: 24px;\n    width: 24px;\n    height: 24px;\n    background-color: #fff;\n    color: var(--title-color);\n  } */\n\n  .react-datepicker__wrapper {\n    position: relative;\n  }\n  .react-datepicker {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 327px;\n    height: 354px;\n    padding: 15px 18px;\n    background-color: var(--title-color);\n    font-family: Inter;\n    border-radius: 16px;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n    \n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: var(--title-color);\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1px 19px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n    text-transform: uppercase;\n    text-align: center;\n  }\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n  }\n  .react-datepicker__current-month {\n    font-family: Inter;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px;\n    text-align: center;\n    color: var(--primary-background-color);\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n    padding: 12px 19px;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px;\n    text-align: center;\n    color: var(--primary-background-color);\n  }\n  .react-datepicker__navigation {\n    margin-top: 15px;\n    color: var(--primary-background-color);\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    width: 18px;\n    height: 18px;\n  }\n\n  .react-datepicker__navigation--next {\n    right: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: white;\n  }\n\n  .react-datepicker__year-read-view--down-arrow,\n  .react-datepicker__month-read-view--down-arrow,\n  .react-datepicker__month-year-read-view--down-arrow,\n  .react-datepicker__navigation-icon::before {\n    border-color: var(--primary-background-color);\n    \n  }\n\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: var(--primary-background-color);\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    flex-shrink: 0;\n    margin: 0;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    color: var(--primary-background-color);\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 16px;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color: var(--primary-background-color);\n    color: var(--title-color);\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: var(--primary-background-color);\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: var(--primary-background-color);\n    color: var(--title-color);\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: var(--primary-background-color);\n    color: var(--title-color);\n  }\n  .react-datepicker__day--weekend {\n    opacity: 50%;\n  }\n  .react-datepicker__day--outside-month {\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n  .react-datepicker__triangle {\n    visibility: hidden;\n  }\n\n  /* ____  */\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 40px;\n  }\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 768px) {\n    gap: 10px;\n  }\n`;\n\nconst CalendarButton = styled.button`\n  width: 121px;\n  height: 30px;\n  border: 0;\n  border-radius: 8px;\n  color: var(--primary-background-color);\n  background-color: var(--title-color);\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover {\n    transform: scale(1.01);\n    background-color: #2378f8;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 134px;\n    height: 34px;\n    font-size: 16px;\n    font-weight: 500;\n  }\n`;\n\nconst SwitcherContainer = styled.div`\n  display: flex;\n  width: 72px;\n  height: 34px;\n  padding: 5px;\n  border: 1px solid rgb(220, 227, 229, 50%);\n  border-radius: 8px;\n  position: relative;\n\n  &:after {\n    content: '';\n    position: absolute;\n    height: 100%;\n    width: 1px;\n    background-color: #dce3e5;\n    top: 0;\n    left: 35px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 74px;\n    height: 34px;\n  }\n`;\n\nconst SwitcherPart = styled.button`\n  flex: 1;\n  text-align: center;\n  transition: transform 0.3s, color 0.3s;\n  color: ${props => (props.active ? 'initial' : '#DCE3E5')};\n  cursor: pointer;\n  position: relative;\n  border:none;\n//   border: 0;\n//   background-color: transparent;\n\n\n  &:hover {\n    color: var(--title-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 2px;\n  }\n`;\n\nexport {\n  PeriodPaginatorContainer,\n  ButtonsContainer,\n  CalendarButton,\n  SwitcherContainer,\n  SwitcherPart,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format, sub, add, parse } from 'date-fns';\nimport DatePicker from 'react-datepicker';\n\nimport { setDates } from '../../../../../store/date/dateSlice';\n\nimport {\n  PeriodPaginatorContainer,\n  ButtonsContainer,\n  SwitcherContainer,\n  SwitcherPart,\n} from './PeriodPaginator.styled';\nimport { selectedDateSelector } from 'store/selectors';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nconst PeriodPaginator = ({ type }) => {\n  const theme = useSelector(state => state.theme);\n   const backgroundColor = theme === 'light' ? '#fff' : '#21222C';\n  const [activeSwitcher, setActiveSwitcher] = useState(0);\n  const params = useParams();\n\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n\n  const normalizedDate = useSelector(selectedDateSelector);\n\n  useEffect(() => {\n    if (params.currentDate) {\n      if (normalizedDate !== params.currentDate) {\n        dispatch(setDates(params.currentDate));\n      }\n    }\n  }, [dispatch, normalizedDate, params.currentDate]);\n\n  const date = parse(normalizedDate, 'yyyy-MM-dd', Date.now());\n  const selectedDay = date;\n\n  const onChangeDate = e => {\n    if (e.currentTarget.name === 'next') {\n      setActiveSwitcher(1);\n      if (type === 'day') {\n        const newDate = add(date, { days: 1 });\n        const formattedNewDate = format(newDate, 'yyyy-MM-dd');\n        dispatch(setDates(formattedNewDate));\n        navigate(`${type}/${formattedNewDate}`);\n        return;\n      }\n      const newDate = add(date, { months: 1 });\n      const formattedNewDate = format(newDate, 'yyyy-MM-dd');\n      dispatch(setDates(formattedNewDate));\n      navigate(`${type}/${formattedNewDate}`);\n      return;\n    }\n    if (type === 'day') {\n      const newDate = sub(date, { days: 1 });\n      const formattedNewDate = format(newDate, 'yyyy-MM-dd');\n      dispatch(setDates(formattedNewDate));\n      navigate(`${type}/${formattedNewDate}`);\n      return;\n    }\n    const newDate = sub(date, { months: 1 });\n    const formattedNewDate = format(newDate, 'yyyy-MM-dd');\n    setActiveSwitcher(0);\n    dispatch(setDates(formattedNewDate));\n    navigate(`${type}/${formattedNewDate}`);\n    return;\n  };\n  const handleChange = date => {\n    const formattedNewDate = format(date, 'yyyy-MM-dd');\n    dispatch(setDates(formattedNewDate));\n    navigate(`day/${formattedNewDate}`);\n  };\n\n  return (\n    <PeriodPaginatorContainer>\n      <ButtonsContainer>\n        <DatePicker\n          id=\"datePickerInput\"\n          selected={selectedDay}\n          onChange={date => handleChange(date)}\n          dateFormat={type === 'month' ? 'MMMM yyyy' : 'd MMM yyyy'}\n        />\n        <SwitcherContainer>\n          <SwitcherPart style={{ backgroundColor }}\n            active={activeSwitcher === 0}\n            type=\"button\"\n            name=\"prev\"\n            onClick={onChangeDate}\n          >\n            ❮\n          </SwitcherPart>\n          <SwitcherPart style={{ backgroundColor }}\n            active={activeSwitcher === 1}\n            type=\"button\"\n            name=\"next\"\n            onClick={onChangeDate}\n          >\n            ❯\n          </SwitcherPart>\n        </SwitcherContainer>\n      </ButtonsContainer>\n    </PeriodPaginatorContainer>\n  );\n};\n\nexport default PeriodPaginator;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  margin-top: 18px;\n  /* margin-bottom: 24px; */\n\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n`;\nexport const Item = styled.li`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 18px;\n  display: flex;\n`;\nexport const StyledNavLink = styled(NavLink)`\n  width: 82px;\n  padding: 8px 0;\n\n  color: var(--title-color);\n\n  background: #e3f3ff;\n\n  text-align: center;\n\n  &.active {\n    color: var(--btn-background-color);\n    background: #cae8ff;\n  }\n\n  &.month {\n    border-radius: 8px 0 0 8px;\n    border-right: 1px solid rgba(62, 133, 243, 0.2);\n  }\n  &.day {\n    border-radius: 0 8px 8px 0;\n  }\n\n  transition: background 100ms linear, color 100ms linear;\n\n  @media screen and (min-width: 768px) {\n    &.day {\n      padding: 8px 26px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\n// для драфту\n\nexport const Button = styled.div`\n  width: 82px;\n  padding: 8px 0;\n\n  color: var(--title-color);\n  background: ${props => props.backgroundColor};\n\n  text-align: center;\n\n  &.active {\n    color: var(--title-color);\n    background: ${props => props.active};\n  }\n\n  &.month {\n    border-radius: 8px 0 0 8px;\n    border-right: 1px solid rgba(62, 133, 243, 0.2);\n  }\n  &.day {\n    border-radius: 0 8px 8px 0;\n  }\n\n  transition: background 100ms linear, color 100ms linear;\n\n  @media screen and (min-width: 768px) {\n    &.day {\n      padding: 8px 26px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\n","import { useSelector } from 'react-redux';\n\nimport { Item, List, StyledNavLink } from './PeriodTypeSelect.styled';\n\nconst PeriodTypeSelect = ({ onChangeType }) => {\n  const theme = useSelector(state => state.theme);\n  const currentDate = useSelector(state => state.date.currentDate);\n  console.log('currentDate :>> ', currentDate);\n  const backgroundColor = theme === 'light' ? '#E3F3FF' : '#21222C';\n  \n  \n  return (\n    <List>\n      <Item>\n        <StyledNavLink style={{ backgroundColor }}\n          className=\"month\"\n          to={`/calendar/month/${currentDate}`}\n          onClick={() => onChangeType('month')}\n        >\n          Month\n        </StyledNavLink>\n      </Item>\n      <Item>\n        <StyledNavLink  style={{ backgroundColor }}\n          className=\"day\"\n          to={`/calendar/day/${currentDate}`}\n          onClick={() => onChangeType('day')}\n        >\n          Day\n        </StyledNavLink>\n      </Item>\n    </List>\n  );\n};\n\nexport default PeriodTypeSelect;\n","import styled from 'styled-components';\n\nconst ToolbarWrapper = styled.div`\n  margin-bottom: 24px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport { ToolbarWrapper };\n","import React, { useState, useEffect } from 'react';\nimport { PeriodPaginator, PeriodTypeSelect } from './CalendarToolbarItems';\nimport { ToolbarWrapper } from './CalendarToolbar.styled';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { format, parse } from 'date-fns';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectedDateSelector, tasksSelector } from 'store/selectors';\nimport {\n  getTasksByDayThunk,\n  getTasksByMonthThunk,\n} from 'store/tasks/tasksThunks';\n\nconst CalendarToolbar = () => {\n  const { currentDate } = useParams();\n\n  const [type, setType] = useState('month');\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const pathname = location.pathname.slice(0, -11);\n  useEffect(() => {\n    if (pathname === '/calendar/day') {\n      setType('day');\n      return;\n    }\n    setType('month');\n  }, [pathname]);\n\n  const selectedDate = useSelector(selectedDateSelector);\n  const normalizedDate = currentDate || selectedDate;\n\n  const date = parse(normalizedDate, 'yyyy-MM-dd', Date.now());\n  const formattedMonth = format(date, 'yyyy-MM');\n  const formattedDay = format(date, 'yyyy-MM-dd');\n\n  const { isChanged } = useSelector(tasksSelector);\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  useEffect(() => {\n    if (type === 'month') {\n      dispatch(\n        getTasksByMonthThunk({\n          month: formattedMonth,\n        })\n      );\n    } else {\n      dispatch(\n        getTasksByDayThunk({\n          day: formattedDay,\n        })\n      );\n    }\n  }, [dispatch, isChanged, normalizedDate]);\n\n  return (\n    <div>\n      <ToolbarWrapper>\n        <PeriodPaginator type={type} />\n        <PeriodTypeSelect today={currentDate} onChangeType={setType} />\n      </ToolbarWrapper>\n    </div>\n  );\n};\n\nexport default CalendarToolbar;\n","import CalendarToolbar from 'components/AuthorizedUserComponents/CalendarPageComponents/CalendarToolbar';\nimport MainLayout from 'components/AuthorizedUserComponents/MainLayout/MainLayout';\nimport PageLayout from '../../components/PageLayout/PageLayout';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectedDateSelector } from 'store/selectors';\n\nconst CalendarPage = () => {\n  const currentDate = useSelector(selectedDateSelector);\n  const navigate = useNavigate();\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    navigate(`/calendar/month/${currentDate}`);\n  }, []);\n  return (\n    <PageLayout>\n      <MainLayout />\n      <CalendarToolbar />\n      <Outlet />\n    </PageLayout>\n  );\n};\n\nexport default CalendarPage;\n"],"names":["PeriodPaginatorContainer","styled","ButtonsContainer","SwitcherContainer","SwitcherPart","props","active","type","backgroundColor","useSelector","state","theme","useState","activeSwitcher","setActiveSwitcher","params","useParams","dispatch","useDispatch","navigate","useNavigate","normalizedDate","selectedDateSelector","useEffect","currentDate","setDates","date","parse","Date","now","selectedDay","onChangeDate","e","currentTarget","name","newDate","add","days","formattedNewDate","format","months","sub","id","selected","onChange","handleChange","dateFormat","style","onClick","List","Item","StyledNavLink","NavLink","onChangeType","console","log","className","to","ToolbarWrapper","setType","pathname","useLocation","slice","selectedDate","formattedMonth","formattedDay","isChanged","tasksSelector","getTasksByMonthThunk","month","getTasksByDayThunk","day","today","PageLayout","MainLayout"],"sourceRoot":""}