{"version":3,"file":"static/js/967.5efebbc4.chunk.js","mappings":"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","sources":["components/AuthorizedUserComponents/StatisticsPageComponents/PeriodPaginator/PeriodPaginator.styled.jsx","components/AuthorizedUserComponents/StatisticsPageComponents/PeriodPaginator/PeriodPaginator.jsx","components/AuthorizedUserComponents/StatisticsPageComponents/StatisticsChart/StatisticsChart.styled.jsx","components/AuthorizedUserComponents/StatisticsPageComponents/StatisticsChart/statisticsHelpers.js","components/AuthorizedUserComponents/StatisticsPageComponents/StatisticsChart/StatisticsChart.jsx","components/AuthorizedUserComponents/StatisticsPageComponents/StatisticsPage.styled.jsx","pages/StatisticsPage/StatisticsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst PeriodPaginatorContainer = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 40px;\n  }\n\n  .react-datepicker__input-container {\n    padding: 8px, 12px, 8px, 12px;\n  }\n\n  #datePickerInput {\n    background-color: var(--title-color);\n    border-radius: 8px;\n    padding: 8px, 12px, 8px, 12px;\n    height: 34px;\n    max-width: 180px;\n    margin-right: 8px;\n    border: 0;\n    color: var(--primary-background-color);\n\n    font-size: 16px;\n    font-weight: 700;\n    text-transform: uppercase;\n    text-align: center;\n\n    color: var(--primary-background-color);\n    border: 0;\n\n    @media screen and (min-width: 768px) {\n      padding: 8px 12px;\n      font-size: 16px;\n\n      align-items: center;\n    }\n  }\n\n  /* .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: var(--primary-background-color);\n    font-family: 'Inter';\n    width: 1.7rem;\n    line-height: 1.2rem;\n    font-size: 18px;\n    margin: 10px 10px;\n  } */\n\n  .react-datepicker__wrapper {\n    position: relative;\n  }\n\n  .react-datepicker {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 327px;\n    height: 354px;\n    padding: 15px 18px;\n    background-color: var(--title-color);\n    font-family: Inter;\n    border-radius: 16px;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: var(--title-color);\n  }\n\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 14px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n    margin-top: 12px;\n    margin-bottom: 8px;\n    font-family: 'Inter';\n    text-transform: uppercase;\n  }\n\n  .react-datepicker__day-name {\n    color: white;\n    font-weight: 600;\n    margin: 8px;\n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n  }\n  .react-datepicker__current-month {\n    font-family: Inter;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px;\n    text-align: center;\n    color: var(--primary-background-color);\n  }\n\n  .react-datepicker__navigation {\n    margin-top: 15px;\n    color: var(--primary-background-color);\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    width: 18px;\n    height: 18px;\n  }\n\n  .react-datepicker__navigation--next {\n    right: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: white;\n  }\n\n  .react-datepicker__year-read-view--down-arrow,\n  .react-datepicker__month-read-view--down-arrow,\n  .react-datepicker__month-year-read-view--down-arrow,\n  .react-datepicker__navigation-icon::before {\n    border-color: var(--primary-background-color);\n  }\n\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: var(--primary-background-color);\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    flex-shrink: 0;\n    margin: 0;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    color: var(--primary-background-color);\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 16px;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color: var(--primary-background-color);\n    color: var(--title-color);\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: var(--primary-background-color);\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: var(--primary-background-color);\n    color: var(--title-color);\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: var(--primary-background-color);\n    color: var(--title-color);\n  }\n  .react-datepicker__day--weekend {\n    opacity: 50%;\n  }\n  .react-datepicker__day--outside-month {\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n  .react-datepicker__triangle {\n    visibility: hidden;\n  }\n\n  /* ____  */\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 768px) {\n    gap: 10px;\n  }\n`;\n\nconst CalendarButton = styled.button`\n  width: 121px;\n  height: 30px;\n  border: 0;\n  border-radius: 8px;\n  color: #fff;\n  background-color: #3e85f3;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover {\n    transform: scale(1.01);\n    background-color: #2378f8;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 134px;\n    height: 34px;\n    font-size: 16px;\n    font-weight: 500;\n  }\n`;\n\nconst SwitcherContainer = styled.div`\n  display: flex;\n  width: 72px;\n  height: 30px;\n  padding: 5px;\n  border: 1px solid rgb(220, 227, 229, 50%);\n  border-radius: 8px;\n  position: relative;\n\n  &:after {\n    content: '';\n    position: absolute;\n    height: 100%;\n    width: 1px;\n    background-color: #dce3e5;\n    top: 0;\n    left: 35px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 74px;\n    height: 34px;\n  }\n`;\n\nconst SwitcherPart = styled.div`\n  flex: 1;\n  text-align: center;\n  transition: transform 0.3s, color 0.3s;\n  color: ${props => (props.active ? 'initial' : '#DCE3E5')};\n  cursor: pointer;\n  position: relative;\n\n  &:hover {\n    /* transform: scale(1.7); */\n    color: var(--title-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 2px;\n  }\n`;\n\nconst List = styled.ul`\n  display: flex;\n  gap: 22px;\n  margin: 20px 0 0 10px;\n  list-style-type: none;\n  padding-left: 0;\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 15px;\n  }\n`;\n\nconst ListItem = styled.li`\n  position: relative;\n  padding-left: 10px;\n  font-size: 14px;\n\n  ::before {\n    content: '•';\n    position: absolute;\n    top: 40%;\n    transform: translateY(-50%);\n    font-size: 35px;\n  }\n\n  &:nth-child(1)::before {\n    color: #ffd2dd;\n    left: -20%;\n  }\n\n  &:nth-child(2)::before {\n    color: #3e85f3;\n    left: -15%;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport {\n  PeriodPaginatorContainer,\n  ButtonsContainer,\n  CalendarButton,\n  SwitcherContainer,\n  SwitcherPart,\n  List,\n  ListItem,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format, sub, add, parse } from 'date-fns';\nimport DatePicker from 'react-datepicker';\n\nimport {\n  PeriodPaginatorContainer,\n  ButtonsContainer,\n  SwitcherContainer,\n  SwitcherPart,\n  List,\n  ListItem,\n} from './PeriodPaginator.styled';\nimport { selectedDateSelector } from 'store/selectors';\nimport { setDates } from 'store/date/dateSlice';\nimport {\n  getTasksByDayThunk,\n  getTasksByMonthThunk,\n} from 'store/tasks/tasksThunks';\n\nconst PeriodPaginator = () => {\n  const theme = useSelector(state => state.theme);\n  const [isSameMonth, setIsSameMonth] = useState(false);\n  const backgroundColor = theme === 'light' ? '#fff' : '#21222C';\n  const [activeSwitcher, setActiveSwitcher] = useState(0);\n  const dispatch = useDispatch();\n  const normalizedDate = useSelector(selectedDateSelector);\n  const date = parse(normalizedDate, 'yyyy-MM-dd', Date.now());\n  const formattedDay = format(date, 'yyyy-MM-dd');\n  const formattedMonth = format(date, 'yyyy-MM');\n  const selectedDay = date;\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    dispatch(getTasksByMonthThunk({ month: formattedMonth }));\n    dispatch(getTasksByDayThunk({ day: formattedDay }));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!isSameMonth) {\n      dispatch(getTasksByMonthThunk({ month: formattedMonth }));\n    }\n    dispatch(getTasksByDayThunk({ day: formattedDay }));\n  }, [dispatch, formattedDay, formattedMonth, isSameMonth]);\n\n  const onChangeDate = e => {\n    if (e.currentTarget.id === 'next') {\n      setActiveSwitcher(1);\n      const newDate = add(date, { days: 1 });\n      format(newDate, 'yyyy-MM') === formattedMonth\n        ? setIsSameMonth(true)\n        : setIsSameMonth(false);\n\n      const formattedNewDate = format(newDate, 'yyyy-MM-dd');\n      dispatch(setDates(formattedNewDate));\n      return;\n    } else {\n      const newDate = sub(date, { days: 1 });\n      format(newDate, 'yyyy-MM') === formattedMonth\n        ? setIsSameMonth(true)\n        : setIsSameMonth(false);\n      const formattedNewDate = format(newDate, 'yyyy-MM-dd');\n      dispatch(setDates(formattedNewDate));\n      return;\n    }\n  };\n\n  const handleChange = date => {\n    const formattedNewDate = format(date, 'yyyy-MM-dd');\n    format(date, 'yyyy-MM') === formattedMonth\n      ? setIsSameMonth(true)\n      : setIsSameMonth(false);\n    dispatch(setDates(formattedNewDate));\n  };\n  return (\n    <PeriodPaginatorContainer>\n      <ButtonsContainer>\n        <DatePicker\n          id=\"datePickerInput\"\n          selected={selectedDay}\n          onChange={date => handleChange(date)}\n          dateFormat={'d MMM yyyy'}\n        />\n        <SwitcherContainer>\n          <SwitcherPart\n            style={{ backgroundColor }}\n            active={activeSwitcher === 0}\n            type=\"button\"\n            id=\"prev\"\n            onClick={onChangeDate}\n          >\n            ❮\n          </SwitcherPart>\n          <SwitcherPart\n            style={{ backgroundColor }}\n            active={activeSwitcher === 1}\n            type=\"button\"\n            id=\"next\"\n            onClick={onChangeDate}\n          >\n            ❯\n          </SwitcherPart>\n        </SwitcherContainer>\n      </ButtonsContainer>\n      <List>\n        <ListItem>By Day</ListItem>\n        <ListItem>By Month</ListItem>\n      </List>\n    </PeriodPaginatorContainer>\n  );\n};\n\nexport default PeriodPaginator;\n","import styled from 'styled-components';\n\nconst ChartContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 40px;\n  padding: 45px 15px;\n  border: 1px solid #e3f3ff;\n  border-radius: 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 35px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 45px 40px;\n  }\n`;\n\nexport { ChartContainer };\n","export const calculateTaskStatusCount = tasks => {\n  const taskStatusCountDay = {\n    todo: 0,\n    inprogress: 0,\n    done: 0,\n  };\n  const taskStatusCountMonth = {\n    todo: 0,\n    inprogress: 0,\n    done: 0,\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /* ----------------------------------- DAY ---------------------------------- */\n  /* -------------------------------------------------------------------------- */\n  taskStatusCountDay.todo =\n    tasks.find(task => task.category === 'to-do')?.amount || 0;\n  taskStatusCountDay.inprogress =\n    tasks.find(task => task.category === 'in-progress')?.amount || 0;\n  taskStatusCountDay.done =\n    tasks.find(task => task.category === 'done')?.amount || 0;\n\n  /* -------------------------------------------------------------------------- */\n  /* ---------------------------------- MONTH --------------------------------- */\n  /* -------------------------------------------------------------------------- */\n  taskStatusCountMonth.todo =\n    tasks.find(task => task.category === 'to-do')?.amount || 0;\n  taskStatusCountMonth.inprogress =\n    tasks.find(task => task.category === 'in-progress')?.amount || 0;\n  taskStatusCountMonth.done =\n    tasks.find(task => task.category === 'done')?.amount || 0;\n  return [taskStatusCountDay, taskStatusCountMonth];\n};\n\nexport const calculatePercentages = tasks => {\n  const allTasksAmount = tasks.todo + tasks.inprogress + tasks.done;\n  const todoPercentage = Math.round((tasks.todo / allTasksAmount) * 100 || 0);\n  const inprogressPercentage = Math.round(\n    (tasks.inprogress / allTasksAmount) * 100 || 0\n  );\n  const donePercentage = Math.round((tasks.done / allTasksAmount) * 100 || 0);\n  return { todoPercentage, inprogressPercentage, donePercentage };\n};\n","import { useEffect, useState } from 'react';\nimport { BarChart, Bar, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport { ChartContainer } from './StatisticsChart.styled';\nimport {\n  calculatePercentages,\n  calculateTaskStatusCount,\n} from './statisticsHelpers';\nimport { useSelector } from 'react-redux';\nimport { tasksSelector } from 'store/selectors';\n\n// const tasks = [\n//   {\n//     category: 'todo',\n//     amount: 1,\n//     data: [\n//       {\n//         _id: '64eb8bf4ec3cfd1d22c535f6',\n//         title: 'My task 1',\n//         start: '09:05',\n//         end: '09:15',\n//         priority: 'medium',\n//         date: '2023-09-01',\n//         category: 'to-do',\n//         owner: '64eb8bf4ec3cfd1d22c59fb1',\n//         createdAt: '2023-08-27T17:46:28.321Z',\n//         updatedAt: '2023-08-30T16:07:28.466Z',\n//       },\n//     ],\n//   },\n//   {\n//     category: 'in-progress',\n//     amount: 2,\n//     data: [\n//       {\n//         _id: '64eb8bf4ec3cfd1d22c535f6',\n//         title: 'My task 1',\n//         start: '09:05',\n//         end: '09:15',\n//         priority: 'medium',\n//         date: '2023-09-01',\n//         category: 'in-progress',\n//         owner: '64eb8bf4ec3cfd1d22c59fb1',\n//         createdAt: '2023-08-27T17:46:28.321Z',\n//         updatedAt: '2023-08-30T16:07:28.466Z',\n//       },\n//       {\n//         _id: '64eb8bf4ec3cfd1d22c535f6',\n//         title: 'My task 2',\n//         start: '09:05',\n//         end: '09:15',\n//         priority: 'medium',\n//         date: '2023-09-02',\n//         category: 'in-progress',\n//         owner: '64eb8bf4ec3cfd1d22c59fb1',\n//         createdAt: '2023-08-27T17:46:28.321Z',\n//         updatedAt: '2023-08-30T16:07:28.466Z',\n//       },\n//     ],\n//   },\n//   {\n//     category: 'done',\n//     amount: 3,\n//     data: [\n//       {\n//         _id: '64eb8bf4ec3cfd1d22c535f6',\n//         title: 'My task 1',\n//         start: '09:05',\n//         end: '09:15',\n//         priority: 'medium',\n//         date: '2023-09-01',\n//         category: 'done',\n//         owner: '64eb8bf4ec3cfd1d22c59fb1',\n//         createdAt: '2023-08-27T17:46:28.321Z',\n//         updatedAt: '2023-08-30T16:07:28.466Z',\n//       },\n//       {\n//         _id: '64eb8bf4ec3cfd1d22c535f6',\n//         title: 'My task 1',\n//         start: '09:05',\n//         end: '09:15',\n//         priority: 'medium',\n//         date: '2023-09-02',\n//         category: 'done',\n//         owner: '64eb8bf4ec3cfd1d22c59fb1',\n//         createdAt: '2023-08-27T17:46:28.321Z',\n//         updatedAt: '2023-08-30T16:07:28.466Z',\n//       },\n//       {\n//         _id: '64eb8bf4ec3cfd1d22c535f6',\n//         title: 'My task 1',\n//         start: '09:05',\n//         end: '09:15',\n//         priority: 'medium',\n//         date: '2023-09-03',\n//         category: 'done',\n//         owner: '64eb8bf4ec3cfd1d22c59fb1',\n//         createdAt: '2023-08-27T17:46:28.321Z',\n//         updatedAt: '2023-08-30T16:07:28.466Z',\n//       },\n//     ],\n//   },\n// ];\n\n//const targetDate = '2023-09-02'; // Эту дату надо брать текущую или из запроса юзера!!!!! Это пока только для примера!!!\n\n// const tasksByDay = targetDate =>\n//   tasks.reduce((result, category) => {\n//     const filteredCategoryTasks = category.data.filter(\n//       task => task.date === targetDate\n//     );\n\n//     if (filteredCategoryTasks.length > 0) {\n//       result.push({\n//         category: category.category,\n//         amount: tasks.length,\n//         tasks: filteredCategoryTasks,\n//       });\n//     }\n\n//     return result;\n//   }, []);\n\nconst StatisticsChart = () => {\n  const [chartWidth, setChartWidth] = useState(0);\n  const { tasks } = useSelector(tasksSelector);\n  const { byDay } = useSelector(tasksSelector);\n  const [chartHeight, setChartHeight] = useState(0);\n  const [chartBarSize, setChartBarSize] = useState(0);\n  const [taskStatusCountDay] = calculateTaskStatusCount(byDay);\n  const [taskStatusCountMonth] = calculateTaskStatusCount(tasks);\n  const ByDay = calculatePercentages(taskStatusCountDay);\n  const ByMonth = calculatePercentages(taskStatusCountMonth);\n  const data = [\n    {\n      name: 'To Do',\n      ByDay: ByDay.todoPercentage,\n      ByMonth: ByMonth.todoPercentage,\n    },\n    {\n      name: 'In Progress',\n      ByDay: ByDay.inprogressPercentage,\n      ByMonth: ByMonth.inprogressPercentage,\n    },\n    {\n      name: 'Done',\n      ByDay: ByDay.donePercentage,\n      ByMonth: ByMonth.donePercentage,\n    },\n  ];\n  const renderCustomBarLabel = ({ payload, x, y, width, height, value }) => {\n    console.log('value :>> ', value);\n    return (\n      <text\n        x={x + width / 2}\n        y={y}\n        fill=\"#343434\"\n        fontWeight=\"500\"\n        textAnchor=\"middle\"\n        dy={-5}\n        style={{ fontSize: window.innerWidth >= 768 ? 16 : 12 }}\n      >{`${value}%`}</text>\n    );\n  };\n\n  useEffect(() => {\n    const handleResize = () => {\n      let newSize = 279;\n      let newHeight = 328;\n      let newBarSize = 22;\n      if (window.innerWidth >= 1440) {\n        newSize = 780;\n        newHeight = 351;\n        newBarSize = 27;\n      } else if (window.innerWidth >= 768) {\n        newSize = 576;\n        newHeight = 328;\n        newBarSize = 22;\n      }\n      setChartWidth(newSize);\n      setChartHeight(newHeight);\n      setChartBarSize(newBarSize);\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <ChartContainer>\n      <BarChart\n        width={chartWidth}\n        height={chartHeight}\n        data={data}\n        margin={{ top: 45, right: 0, bottom: 5, left: -15 }}\n        barGap=\"7%\"\n      >\n        <CartesianGrid stroke=\"rgba(227, 243, 255, 1)\" vertical={false} />\n        <Bar\n          dataKey=\"ByDay\"\n          fill=\"url(#pinkGradientFill)\"\n          label={renderCustomBarLabel}\n          barSize={chartBarSize}\n          radius={7}\n        />\n        <Bar\n          dataKey=\"ByMonth\"\n          fill=\"url(#blueGradientFill)\"\n          label={renderCustomBarLabel}\n          barSize={chartBarSize}\n          radius={7}\n        />\n        <defs>\n          <linearGradient\n            id=\"pinkGradientFill\"\n            x1=\"0%\"\n            y1=\"0%\"\n            x2=\"0%\"\n            y2=\"100%\"\n          >\n            <stop offset=\"0%\" stopColor=\"rgba(255, 210, 221, 0)\" />\n            <stop offset=\"100%\" stopColor=\"rgba(255, 210, 221, 1)\" />\n          </linearGradient>\n          <linearGradient\n            id=\"blueGradientFill\"\n            x1=\"0%\"\n            y1=\"0%\"\n            x2=\"0%\"\n            y2=\"100%\"\n          >\n            <stop offset=\"0%\" stopColor=\"rgba(62, 133, 243, 0)\" />\n            <stop offset=\"100%\" stopColor=\"rgba(62, 133, 243, 1)\" />\n          </linearGradient>\n        </defs>\n        <XAxis\n          dataKey=\"name\"\n          axisLine={{ stroke: 'transparent' }}\n          tickMargin={20}\n          tickSize={0}\n          tick={{\n            fontSize: window.innerWidth >= 768 ? 14 : 12,\n            fontWeight: '500',\n          }}\n        />\n        <YAxis\n          label={{\n            value: 'Tasks',\n            position: 'top',\n            dx: 4,\n            dy: -30,\n            style: {\n              fontSize: '14px',\n              fontWeight: '700',\n              fill: '#343434',\n            },\n          }}\n          domain={[0, 100]}\n          ticks={[0, 20, 40, 60, 80, 100]}\n          axisLine={{ stroke: 'transparent' }}\n          tickMargin={20}\n          tickSize={0}\n          tick={{\n            fontSize: 14,\n            fontWeight: '500',\n          }}\n        />\n      </BarChart>\n    </ChartContainer>\n  );\n};\n\nexport default StatisticsChart;\n","import styled from 'styled-components';\n\nconst StatisticsContainer = styled.div`\n  min-width: 335px;\n  height: 684px;\n  margin: 0 15px 40px;\n  padding: 30px 15px 0px;\n  border-radius: 16px;\n  background-color: var(--primary-background-color);\n\n  @media screen and (min-width: 768px) {\n    min-width: 704px;\n    min-height: 854px;\n    margin: 50px 20px 40px;\n    padding: 132px 32px 0px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    min-width: 1087px;\n    min-height: 752px;\n    margin: 32px 32px 32px 323px;\n    padding: 134px 113px 0px;\n  }\n`;\n\nexport { StatisticsContainer };\n","import MainLayout from 'components/AuthorizedUserComponents/MainLayout/MainLayout';\nimport PeriodPaginator from 'components/AuthorizedUserComponents/StatisticsPageComponents/PeriodPaginator';\nimport StatisticsChart from 'components/AuthorizedUserComponents/StatisticsPageComponents/StatisticsChart';\nimport PageLayout from '../../components/PageLayout/PageLayout';\nimport { StatisticsContainer } from 'components/AuthorizedUserComponents/StatisticsPageComponents/StatisticsPage.styled';\n\nconst StatisticsPage = () => {\n  return (\n    <PageLayout>\n      <MainLayout />\n      <StatisticsContainer>\n        <PeriodPaginator />\n        <StatisticsChart />\n      </StatisticsContainer>\n    </PageLayout>\n  );\n};\n\nexport default StatisticsPage;\n"],"names":["PeriodPaginatorContainer","styled","ButtonsContainer","SwitcherContainer","SwitcherPart","props","active","List","ListItem","theme","useSelector","state","useState","isSameMonth","setIsSameMonth","backgroundColor","activeSwitcher","setActiveSwitcher","dispatch","useDispatch","normalizedDate","selectedDateSelector","date","parse","Date","now","formattedDay","format","formattedMonth","selectedDay","useEffect","getTasksByMonthThunk","month","getTasksByDayThunk","day","onChangeDate","e","currentTarget","id","newDate","sub","days","formattedNewDate","setDates","add","selected","onChange","handleChange","dateFormat","style","type","onClick","ChartContainer","calculateTaskStatusCount","tasks","taskStatusCountDay","todo","inprogress","done","taskStatusCountMonth","find","task","category","amount","calculatePercentages","allTasksAmount","todoPercentage","Math","round","inprogressPercentage","donePercentage","chartWidth","setChartWidth","tasksSelector","byDay","chartHeight","setChartHeight","chartBarSize","setChartBarSize","ByDay","ByMonth","data","name","renderCustomBarLabel","payload","x","y","width","value","height","console","log","fill","fontWeight","textAnchor","dy","fontSize","window","innerWidth","handleResize","newSize","newHeight","newBarSize","addEventListener","removeEventListener","BarChart","margin","top","right","bottom","left","barGap","CartesianGrid","stroke","vertical","Bar","dataKey","label","barSize","radius","x1","y1","x2","y2","offset","stopColor","XAxis","axisLine","tickMargin","tickSize","tick","YAxis","position","dx","domain","ticks","StatisticsContainer","PageLayout","MainLayout"],"sourceRoot":""}