{"version":3,"file":"static/js/300.ff463698.chunk.js","mappings":"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","sources":["components/AuthorizedUserComponents/AccountPageComponents/UserFild/UserFild.jsx","components/AuthorizedUserComponents/AccountPageComponents/schemas/userSchema.js","components/AuthorizedUserComponents/AccountPageComponents/UserForm/UserForm.jsx","helpers/currentDay.js","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["import {\n  Input,\n  MessageError,\n  Label,\n  IconStatusWrap,\n  ErrorIcon,\n  CorrectIcon,\n  CorrectTag,\n} from 'components/AuthorizedUserComponents/AccountPageComponents/UserForm/UserForm.styled';\nimport { useSelector } from 'react-redux';\n\nexport const UserFild = ({\n  touched,\n  errors,\n  title,\n  type,\n  name,\n  placeholder = null,\n  values,\n}) => {\n  const theme = useSelector(state => state.theme);\n  const colorTitle = theme === 'light' ? '#111' : 'rgba(250, 250, 250, 0.30)';\n  const colorInput = theme === 'light' ? '#111111' : '#FFFFFF';\n  const borderColorInput =\n    theme === 'light' ? 'rgba(17, 17, 17, 0.15)' : 'rgba(255, 255, 255, 0.15)';\n  return (\n    <Label\n      colorTitle={colorTitle}\n      style={{\n        color:\n          (touched && errors && '#E74A3B') || (touched && !errors && '#3CBC81'),\n        borderColor:\n          (touched && errors && '#E74A3B') || (touched && !errors && '#3CBC81'),\n      }}\n    >\n      {title}{' '}\n      <IconStatusWrap>\n        <Input\n          border={borderColorInput}\n          color={colorInput}\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          style={{\n            color:\n              (touched && errors && '#E74A3B') ||\n              (touched && !errors && '#3CBC81'),\n            borderColor:\n              (touched && errors && '#E74A3B') ||\n              (touched && !errors && '#3CBC81'),\n          }}\n        />\n        {touched && errors && <ErrorIcon />}\n        {touched && !errors && <CorrectIcon />}\n      </IconStatusWrap>\n      {touched && !errors && values.length > 0 && (\n        <CorrectTag>This is an CORRECT {name}</CorrectTag>\n      )}\n      <MessageError name={name} component=\"p\" />\n    </Label>\n  );\n};\n","import * as Yup from 'yup';\n\nconst regex = {\n  name: /^[a-z]*$/,\n  email:\n    /^(?!.@.@.$)(?!.@.--...$)(?!.@.-..$)(?!.@.-$)((.*)?@[a-z0-9]{1,}.[a-z]{2,}(.[a-z]{2,})?)$/,\n  phone:\n    /^[+]?[(]?[0-9]{1,4}[)]?[-\\s.]?[0-9]{1,3}[-\\s.]?[0-9]{1,4}[-\\s.]?[0-9]{1,4}$/,\n  skype: /^@[A-Za-z0-9_.-]{3,50}$/,\n};\n\nexport const userSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(/^[^0-9]+$/, 'Name should contain only letters')\n    .min(2, 'Must be at least 2 characters!')\n    .max(16, 'Must be up to 16 characters!')\n    .required('Name is required'),\n  birthday: Yup.string('Please enter your full date of birth').required(\n    'Birthday is required'\n  ),\n  email: Yup.string()\n    .email('Invalid email format')\n    .matches(regex.email, 'Invalid email format')\n    .required('Email is required'),\n  phone: Yup.string()\n    .matches(regex.phone, 'Invalid phone number format')\n    .min(6, 'At least 7 digits is required'),\n    skype: Yup.string()\n    .matches(regex.skype, 'Invalid skype username format')\n    .max(50, 'At most 50 digits is required'),\n  avatarURL: Yup.string()\n});","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from 'store/user/selectors';\nimport { Formik } from 'formik';\nimport { UserFild } from '../UserFild';\nimport { toast } from 'react-toastify';\nimport { userSchema } from '../schemas/userSchema';\nimport { fetchCurrentUser, updateUser } from 'store/user/operations';\nimport {\n  Wrapper,\n  Wrap,\n  Button,\n  Title,\n  Img,\n  InputImg,\n  AddIcon,\n  WrapImg,\n  Sticker,\n  Box,\n  AccountForm,\n  Name,\n  LoaderContainer,\n  Label,\n  DatePickerStyled,\n  PopperDateStyles,\n} from './UserForm.styled';\nimport getCurrentDate from 'helpers/currentDay';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs from 'dayjs';\nimport Loader from '../../../Loader/Loader';\nconst currentDate = getCurrentDate();\n\nconst UserForm = () => {\n  const [imagePreview, setImagePreview] = useState(null);\n  const [imageUpload, setImageUpload] = useState(null);\n  const [isFormChanged, setIsFormChanged] = useState(false);\n  const isFulfilled = useSelector(state => state.user.isFulfilled);\n  const dispatch = useDispatch();\n  const userInfo = useSelector(selectUser);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const theme = useSelector(state => state.theme);\n  const backgroundUserForm = theme === 'light' ? '#FFF' : '#21222C';\n  const colorTitleUserName = theme === 'light' ? '#343434' : '#FFF';\n  const colorTitleUser =\n    theme === 'light' ? '#343434' : 'rgba(250, 250, 250, 0.30)';\n  const colorTitle = theme === 'light' ? '#111' : 'rgba(250, 250, 250, 0.30)';\n  const colorInput = theme === 'light' ? '#111111' : '#FFFFFF';\n  const borderColorInput =\n    theme === 'light' ? 'rgba(17, 17, 17, 0.15)' : 'rgba(255, 255, 255, 0.15)';\n  const refreshToken = localStorage.getItem('refreshToken');\n  useEffect(() => {\n    dispatch(fetchCurrentUser())\n      .then(() => {\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.error('ÐÐ¾Ð¼Ð¸Ð»ÐºÐ° Ð·Ð°Ð²Ð°Ð½ÑÐ°Ð¶ÐµÐ½Ð½Ñ Ð´Ð°Ð½Ð¸Ñ:', error);\n      });\n  }, [dispatch, refreshToken]);\n\n  if (isLoading) {\n    return (\n      <LoaderContainer>\n        <Loader />\n      </LoaderContainer>\n    );\n  }\n\n  const handleImageChange = async e => {\n    const selectedFile = e.target.files[0];\n    if (!selectedFile) {\n      return;\n    }\n    const imageUrl = URL.createObjectURL(selectedFile);\n    setImagePreview(imageUrl);\n    setImageUpload(selectedFile);\n    setIsFormChanged(true);\n  };\n\n  const { name, birthday, email, phone, skype, avatarURL } = userInfo;\n  const handleSubmit = async values => {\n    const formData = new FormData();\n    formData.append('name', values.name);\n    formData.append('email', values.email);\n    if (values.phone) {\n      formData.append('phone', values.phone);\n    }\n    if (values.skype) {\n      formData.append('skype', values.skype);\n    }\n    if (values.birthday) {\n      formData.append('birthday', dayjs(values.birthday).format('YYYY/MM/DD'));\n    }\n    if (imageUpload) {\n      formData.append('avatar', imageUpload);\n    }\n\n    try {\n      await dispatch(updateUser(formData));\n      await dispatch(fetchCurrentUser());\n      setIsFormChanged(false);\n      toast.success('Profile data changed successfully');\n    } catch {\n      toast.error('Something went wrong... Try again!');\n    }\n  };\n  if (isFulfilled) {\n    return (\n      <Formik\n        initialValues={{\n          name: name || '',\n          birthday: birthday || '',\n          email: email || '',\n          phone: phone || '',\n          skype: skype || '',\n          avatarURL: avatarURL || '',\n        }}\n        validationSchema={userSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, setFieldValue, dirty, touched, errors }) => (\n          <AccountForm background={backgroundUserForm}>\n            <Box\n              position=\"relative\"\n              display=\"block\"\n              m=\"0 auto\"\n              width=\"max-content\"\n            >\n              <WrapImg>\n                {' '}\n                {imagePreview ? (\n                  <Img src={imagePreview} alt=\"Avatar Preview\" />\n                ) : (\n                  <Img src={avatarURL} alt=\"Avatar\" />\n                )}\n              </WrapImg>\n\n              <InputImg\n                type=\"file\"\n                onChange={handleImageChange}\n                accept=\"image/*\"\n                id=\"add-image\"\n              />\n              <Sticker htmlFor=\"add-image\">\n                <AddIcon />\n              </Sticker>\n            </Box>\n            <Name colorTitleUser={colorTitleUserName}>{name}</Name>\n            <Title colorTitleUser={colorTitleUser}>User</Title>\n            <Wrap>\n              <Wrapper>\n                <UserFild\n                  title=\"User name\"\n                  type=\"text\"\n                  name=\"name\"\n                  touched={touched.name}\n                  errors={errors.name}\n                  values={values.name}\n                />\n                <Label colorTitle={colorTitle}>\n                  Birthday\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                    <DatePickerStyled\n                      color={colorInput}\n                      borderColorInput={borderColorInput}\n                      name=\"birthday\"\n                      type=\"date\"\n                      slotProps={{\n                        popper: {\n                          sx: PopperDateStyles,\n                        },\n                        textField: {\n                          placeholder: birthday || currentDate,\n                        },\n                      }}\n                      views={['year', 'month', 'day']}\n                      format=\"YYYY/MM/DD\"\n                      closeOnSelect={true}\n                      disableFuture={true}\n                      onChange={date => {\n                        setFieldValue('birthday', date);\n                        setIsFormChanged(true);\n                      }}\n                    />\n                  </LocalizationProvider>\n                </Label>\n\n                <UserFild\n                  title=\"Email\"\n                  type=\"email\"\n                  name=\"email\"\n                  touched={touched.email}\n                  errors={errors.email}\n                  values={values.email}\n                />\n              </Wrapper>\n\n              <Wrapper>\n                <UserFild\n                  title=\"Phone\"\n                  type=\"tel\"\n                  name=\"phone\"\n                  placeholder=\"Add phone number\"\n                  touched={touched.phone}\n                  errors={errors.phone}\n                  values={values.phone}\n                />\n                <UserFild\n                  title=\"Skype\"\n                  type=\"text\"\n                  name=\"skype\"\n                  placeholder=\"Add a skype nickname\"\n                  touched={touched.skype}\n                  errors={errors.skype}\n                  values={values.skype}\n                />\n              </Wrapper>\n            </Wrap>\n            <Button type=\"submit\" disabled={!dirty && !isFormChanged}>\n              Save changes\n            </Button>\n          </AccountForm>\n        )}\n      </Formik>\n    );\n  }\n};\n\nexport default UserForm;\n","import { format } from 'date-fns';\n\nexport default function getCurrentDate() {\n  const date = new Date();\n  return format(date, 'yyyy-MM-dd');\n}\n","import UserForm from 'components/AuthorizedUserComponents/AccountPageComponents/UserForm/UserForm';\nimport MainLayout from 'components/AuthorizedUserComponents/MainLayout/MainLayout';\nimport PageLayout from '../../components/PageLayout/PageLayout';\n\nconst AccountPage = () => {\n  return (\n    <PageLayout>\n      <MainLayout />\n      <UserForm />\n    </PageLayout>\n  );\n};\n\nexport default AccountPage;\n"],"names":["UserFild","touched","errors","title","type","name","placeholder","values","theme","useSelector","state","colorTitle","colorInput","borderColorInput","style","color","borderColor","border","length","component","regex","userSchema","Yup","shape","matches","min","max","required","birthday","email","phone","skype","avatarURL","currentDate","date","Date","format","getCurrentDate","useState","imagePreview","setImagePreview","imageUpload","setImageUpload","isFormChanged","setIsFormChanged","isFulfilled","user","dispatch","useDispatch","userInfo","selectUser","isLoading","setIsLoading","backgroundUserForm","colorTitleUserName","colorTitleUser","refreshToken","localStorage","getItem","useEffect","fetchCurrentUser","then","catch","error","console","Loader","handleImageChange","e","selectedFile","target","files","imageUrl","URL","createObjectURL","handleSubmit","formData","FormData","append","dayjs","updateUser","toast","initialValues","validationSchema","onSubmit","setFieldValue","dirty","background","position","display","m","width","src","alt","onChange","accept","id","htmlFor","LocalizationProvider","dateAdapter","AdapterDayjs","slotProps","popper","sx","PopperDateStyles","textField","views","closeOnSelect","disableFuture","disabled","PageLayout","MainLayout"],"sourceRoot":""}